(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    199206,       4110]
NotebookOptionsPosition[    197250,       4044]
NotebookOutlinePosition[    197630,       4061]
CellTagsIndexPosition[    197587,       4058]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Using E2 result as an approximation for the \
asymmetric rectification potential", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.699268254695674*^9, 3.699268284526595*^9}}],

Cell["Density on either side of cusp", "Text",
 CellChangeTimes->{{3.699538299087694*^9, 3.699538303855826*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"a", "+", "1"}], ")"}], "2"], " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{
      RowBox[{"1", "/", "2"}], " ", "a", 
      RowBox[{"(", 
       RowBox[{"a", "+", "1"}], ")"}], 
      SuperscriptBox["y", "2"]}], "+", 
     RowBox[{"a", 
      RowBox[{"(", 
       RowBox[{"a", "+", "1"}], ")"}], "x", " ", "y"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["L", "l"], ")"}], "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["L", "l"], ")"}], "2"]}], "+", "1"}], ")"}], "2"], 
      " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{
      RowBox[{"1", "/", "2"}], " ", "a", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["L", "l"], ")"}], "2"]}], "+", "1"}], ")"}], 
      SuperscriptBox["y", "2"]}], "+", 
     RowBox[{"a", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["L", "l"], ")"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["L", "l"], ")"}], "2"]}], "+", "1"}], ")"}], "x", " ", 
      "y"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.699110807397304*^9, 3.699111017379531*^9}, {
   3.6991245629916787`*^9, 3.6991245987445555`*^9}, {3.699126561248128*^9, 
   3.699126565875217*^9}, {3.6991265967488356`*^9, 3.6991265986290903`*^9}, 
   3.699130849404786*^9, {3.6991335116586533`*^9, 3.6991335383484783`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"norm", "=", 
   RowBox[{
    FractionBox["\[Pi]", 
     SqrtBox["a"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"a", "+", "1"}]], 
       RowBox[{"Erf", "[", 
        RowBox[{
         SqrtBox[
          FractionBox[
           RowBox[{"a", "+", "1"}], "2"]], "L"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          FractionBox["L", "l"], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["L", "l"], ")"}], "2"]}], "+", "1"}], ")"}]}]], 
       RowBox[{"Erf", "[", 
        RowBox[{
         SqrtBox[
          FractionBox[
           RowBox[{
            RowBox[{"a", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["L", "l"], ")"}], "2"]}], "+", "1"}], "2"]], "L"}],
         "]"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", "am", " ", "interested", " ", "near", " ", "the", " ", 
      RowBox[{"cusp", ".", " ", "The"}], " ", "normalisation", " ", 
      RowBox[{"won", "'"}], "t", " ", "be", " ", "quite", " ", "right", " ", 
      "close", " ", "to", " ", "x"}], "=", "0"}], ",", " ", 
    RowBox[{
    "but", " ", "hopefully", " ", "this", " ", "is", " ", "just", " ", "a", 
     " ", "shift", " ", "rather", " ", "than", " ", "a", " ", "distortion", 
     " ", "of", " ", "the", " ", "profile", " ", "near", " ", "the", " ", 
     "cusp"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.699268147331975*^9, 3.699268246359106*^9}, {
  3.699268361626083*^9, 3.6992683729276295`*^9}, {3.6992684077929115`*^9, 
  3.6992684491235123`*^9}}],

Cell["Full predicted eta distribution", "Text",
 CellChangeTimes->{{3.699538310447748*^9, 3.699538320271798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"py", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{"p1", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], "+", 
     RowBox[{"Integrate", "[", 
      RowBox[{"p2", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "l"}], "}"}]}], "]"}]}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"py", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "\[Rule]", "1"}], ",", 
      RowBox[{"L", "\[Rule]", "0.8"}], ",", 
      RowBox[{"l", "\[Rule]", "0.2"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Eta]\>\"", ",", "\"\<p(\[Eta])\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "asymmetry", " ", "is", " ", "not", " ", "observed", " ", 
    "in", " ", "simulation"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.699111022561992*^9, 3.6991110278495235`*^9}, {
  3.6991111642325993`*^9, 3.699111198586543*^9}, {3.699111325245126*^9, 
  3.6991113426237307`*^9}, {3.699132624616283*^9, 3.699132627132962*^9}, {
  3.699239741328533*^9, 3.699239748698456*^9}, {3.6992683258331795`*^9, 
  3.699268354887581*^9}, {3.6992684851946025`*^9, 3.6992685019998245`*^9}, {
  3.69926943099021*^9, 3.699269443367476*^9}, {3.699538230353015*^9, 
  3.699538263697*^9}, {3.699538326361352*^9, 3.699538328688435*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwtm3k4Vd/3x433Gq57VZqkjyEKCRkq4qyTSiGKzDJGiTKWJDKEKEqTZEpo
IBkyS84WInPmebyEZJ6Jn+/z/P46z+s5a6+913u/n3X2/uMIWjnq2DAxMDBI
MzMw/O8pCTvGNjZoyPibfAtD+DnMcXlf0PIKDdGj/hYJH9TE0jMP75+dpyG9
KJb64yWamIyoptXwHxpaXc/y81rTwo5u8e+obqUhb7cPfh6VFzD3qqfuPxpo
SFA+jf+ToDZWEPBmB6qhod/qZszPPbQxpZUCncwSGqK0Sh9PPqyD4YPTla/T
aMhkx9+bY9kXMd+YDdvnyTRkM6+qWrFHF/tuwEUOfUdDa7F83xLv62KnqkVP
+kTRUB3X+m0fIz1MLdv865UHNOR1LO14938GmM6Dmk+y5jQkMv7QMnq3Cfb8
RKfaIWMacg9806aXaII1rY783q9HQxH1obnE4UuYvhOLMK8GDYWoknzadE0x
E6Pj0QxHaYhJ0fhk+DdzLHqbmuLK4c36hgNyE6UssJ4a/bZZCRrSH9d25/Kz
wCxUXHh+C9GQGleoafJBS8z6YFJIDZWGqOdX7o89s8LeDeWIl7PTUM3344bb
p62w4TelFYhls55z8TlU7cvYNZ4+lqwVKioRf+73ZIc15vBvh1fkMBVFoXmB
kjwb7Had/42rRVSkICyTo251DQv549Y6l0dFlUruNU/Hr2Hx5Gsn/DKpyP9V
jMyXO3ZYNWhuj/lIRS6S/pL50faYUPr2bw3PqGjd2DLzAdkBO1ZNPmARSkVb
mC4LQbIDpjmyHPb3ARX9h6tPaFxwxNwFeqzZvKho7YflF92LTlht2HsKdpWK
JM2STkoTzhg9JcKtypKK7vPQ8lr+c8GWKx72GV6iopSA44uOPi6YMKNjlqs2
FQkwyh2JV3PFPJyPXko6TkXsLY4D++ZvYvt1Kj7xcFMRr6lKiVyBO6bkULA9
noOKfP/5u3BhdzDthyneUqxUJN0h0hpaegfz/B52UX2FC6lu5UQF7R5Yg4zR
qjedCyXekeNU3e+FjWhp2HD1ciF/yr28TuSF/bNTrots50Ini/q+Bpvdw0QT
BBOya7kQ0LeLX0/wxry2jan/yeNCn7MLcH9xX+yZVFeWeyYXuvP6vh01wBf7
qFH7HymVC32gTszZ9PtiDfe/zAgkcKEUaaMvcW/8MNE5j0j90M31eKQVqcr6
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
9+CHd7xcMQMr/iS8QfsQzQuECo9IhEqw4ua/hoe2FnpAp5z5HhF/VtzHOLb6
0Us3uLIsTwsIZsV1rD8+8zdyg6lvFOahx6x47XxxAfU/N2A5UzCW+JoVn+Xu
N2z4eAskjbYXCKex4hJXXlycL70JPl5VhsIdrHhe0pWNxB2uwKESf86/d3O8
gF7a/kEXeEm6g9PprPgveRfVA+kukPxkv2jiJCu+/WVCXZyGCzS+9V3cx0rC
59YFMYMgZ9j/42j4PmkSjuv/kPu90wnSH1If3pcn4Tl7tmAZrY6geH7Ia1CR
hAdsPV/k5OMI59ue2SScJuFsj4KXvZocwH3sr9w+ExLuKxf0ISrwBlRRExuF
Akn4e9Ku+hNb7MHJgHuLUBcJ1w/QD+/KvAJWH6UiRfo3+bqzwW73K6C3rLVP
bJiEB4kI5w4pXQHFqFB56SkSzh93w0S0wgZYezmMMRYybpjtvSIzZA2RV1gT
jCXIeK6ZtPLFY5chJFdYwuwwGffa1V26zHIZvNlOZVseIeNR31/x7m2wAutk
v3JbnIzfu5pa2XzDCqQmNv646ZJxrheXp6aSLaH01orcc08y7mvfMDmgaAE5
P3YXhfuS8S1Mq/QWqgUk7VQ4ExlIxpmt/9vm8MMcHuffNnobRsa7RtlZnHjN
wejfnFdaIhnvN7Slnao2hQn/yR9V1WR8p16d7BM9E9j9gm7IspcNN0PmfSEz
+nDsPv+Om0JsePZD28W4FH3QdzFuHDzAhk8YtpJcr+rDswv1miUybLiEql6o
Wq8eULgKVfzOsuHmy5KpIa26sB7wXILhJhu+rhYc3j2iA3y3akcd77Dhur7a
usufdeC4NfuH3ntsuHVrAFuuqw64q3gLEsFs+NgF1dEtjDowvW63494bNtzQ
/YTf7n3aQL+twrBWyYYHHPxorkA6D0xXvb7Z17PhUwy9zJCgBQL6eR6dzWz4
nOzjSsMTWmAqJzlf0MeGm2gEN3zz0YSWqd1jdxbY8OsVP7uYKOfg57XpxkVB
dvyGo3D2UR01GDGUeHr1ADuukGKyeHrjLJDOXtVqlWDHTQ3CCuDzWVDZ312R
c5Qdn4i/6jnOeRYKByq+3dJkx28dI53906gKqSZxH2bd2XHrqvzy5yGnQK51
3wrpHju+tU2dcVDjFHzV+XCO9z47zhgVH9jPeQoq1FKn8VB23M/uJHk49CQM
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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Eta]\"", TraditionalForm], 
    FormBox["\"p(\[Eta])\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[FontSize -> 16],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {0., 0.6581743077946994}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.699111028459931*^9, 3.6991111994191*^9, {3.6991113265329857`*^9, 
   3.6991113437634926`*^9}, 3.699126611521701*^9, 3.6991326371776714`*^9, 
   3.6991326972597947`*^9, 3.6992685266192665`*^9, 3.699269451113649*^9, 
   3.699537736942813*^9, 3.699538267220392*^9}]
}, Open  ]],

Cell[TextData[StyleBox["Calculate currents at cusp", "Text"]], "Text",
 CellChangeTimes->{{3.699538114775794*^9, 3.699538119855742*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Jx", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Eta]", "+", "f"}], ")"}], 
     RowBox[{"\[Rho]", ".", " ", "Integrate"}], " ", "this", " ", "at", " ", 
     "the", " ", "cusp", " ", "to", " ", "find", " ", "total", " ", "current",
      " ", "which", " ", "makes", " ", "it", " ", 
     RowBox[{"over", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Jp", "=", 
    RowBox[{
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", ">", "0"}], "&&", 
        RowBox[{"L", ">", "l", ">", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", "L"}], ")"}], "*", "p1"}], "/.", 
          RowBox[{"x", "\[Rule]", "L"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "L", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
      "]"}], "//", "Simplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"Jm", "=", 
    RowBox[{
     RowBox[{"Assuming", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", ">", "0"}], "&&", 
        RowBox[{"L", ">", "l", ">", "0"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "+", 
             RowBox[{
              SuperscriptBox["L", "2"], "/", "l"}]}], ")"}], "*", "p2"}], "/.", 
          RowBox[{"x", "\[Rule]", 
           RowBox[{"-", "l"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["L", "2"]}], "/", "l"}], ",", 
           RowBox[{"-", "\[Infinity]"}]}], "}"}]}], "]"}]}], "]"}], "//", 
     "Simplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jp", "/=", "norm"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jm", "/=", "norm"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.699125244970108*^9, 3.6991252940588903`*^9}, {
   3.6992693934841633`*^9, 3.6992693941956377`*^9}, {3.6992694838355007`*^9, 
   3.6992694918778715`*^9}, 3.699269565592098*^9, {3.699537931235176*^9, 
   3.699538027385269*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], " ", 
    SuperscriptBox["L", "2"]}]], 
  RowBox[{"a", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "a"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.6991252904584866`*^9, 3.699125329436516*^9, 
  3.6991266966955805`*^9, 3.69913071522618*^9, 3.699130892437523*^9, 
  3.699131010180152*^9, 3.6991327115563416`*^9, 3.6992686024689198`*^9, 
  3.699269507083027*^9, 3.699269582211196*^9, 3.699537740594701*^9, 
  3.6995380313848953`*^9, 3.69973344846146*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox["L", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"a", " ", 
         SuperscriptBox["L", "2"]}], 
        SuperscriptBox["l", "2"]]}], ")"}]}]], " ", 
   SuperscriptBox["l", "2"]}], 
  RowBox[{"a", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["l", "2"], "+", 
     RowBox[{"a", " ", 
      SuperscriptBox["L", "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.6991252904584866`*^9, 3.699125329436516*^9, 
  3.6991266966955805`*^9, 3.69913071522618*^9, 3.699130892437523*^9, 
  3.699131010180152*^9, 3.6991327115563416`*^9, 3.6992686024689198`*^9, 
  3.699269507083027*^9, 3.699269582211196*^9, 3.699537740594701*^9, 
  3.6995380313848953`*^9, 3.699733459165156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["norm"], "Input",
 CellChangeTimes->{{3.699733451126885*^9, 3.699733451511505*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", "a"}]], " ", "L"}], 
        SqrtBox["2"]], "]"}], 
      RowBox[{"1", "+", "a"}]], "+", 
     FractionBox[
      RowBox[{"l", " ", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"L", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"a", " ", 
              SuperscriptBox["L", "2"]}], 
             SuperscriptBox["l", "2"]]}]]}], 
         SqrtBox["2"]], "]"}]}], 
      RowBox[{"L", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"a", " ", 
           SuperscriptBox["L", "2"]}], 
          SuperscriptBox["l", "2"]]}], ")"}]}]]}], ")"}]}], 
  SqrtBox["a"]]], "Output",
 CellChangeTimes->{3.699733459428589*^9}]
}, Open  ]],

Cell["\<\
Plot current left, current right, and total for given geometry\
\>", "Text",
 CellChangeTimes->{{3.699538127015752*^9, 3.69953814027171*^9}, {
  3.699538355991881*^9, 3.699538364823902*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Jp", ",", "Jm", ",", 
       RowBox[{"Jp", "-", "Jm"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "\[Rule]", "2"}], ",", 
       RowBox[{"l", "\[Rule]", "1"}]}], "}"}]}], "//", "Evaluate"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(J\), \(+\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(J\), \(-\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(J\), \(net\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6991269417021976`*^9, 3.6991269719273815`*^9}, {
   3.6991270844145007`*^9, 3.6991271100556235`*^9}, {3.6991271817404957`*^9, 
   3.6991272286127977`*^9}, {3.699128137119503*^9, 3.6991281408039646`*^9}, 
   3.6991282242717047`*^9, 3.6991283353989162`*^9, {3.699128374206831*^9, 
   3.6991283765183764`*^9}, {3.6991303234615574`*^9, 
   3.6991303614179044`*^9}, {3.6992686400750318`*^9, 
   3.6992686922368665`*^9}, {3.6992692131117096`*^9, 
   3.6992692143415327`*^9}, {3.6995380569856863`*^9, 3.69953809327398*^9}, {
   3.699538152137186*^9, 3.699538206112775*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVj3s8lIkChl0P5eR+2ZSi2FaJtm1Hrdq32KKwGrS2sw3RprCbk/lcUmJk
uhzD2NZtKUJGuxYz09waUzScibLuQstgUO7fViI6sZ0/3t/z5/O8NiGRvic1
1NTUgj/s/0ysPMc40HEXz1L/9ZQ1LIEddWasLlWAQM/u3KYjElgmun9xqkgA
/lzh4Zn9EhhW3EpdKRag/EtLt00UCRZ1/RypKgE47xsn+80laK0V05U7hTjh
U6b5ba8Y8dsYS29HhbhVJ8ryCRGj2cDU1HGvGOPj8WteJ4tQt+fHk21HxNCK
k+bkRIsgiVCIiAgxuoaT3LxPi1DyKO5odbYYoz2X2ZPeIsQl9hd4TIuhSPbs
J1eLsIHk2J/IkyA84PD4vECI2OZdyJ29h2XxazPrOQH0HYWjjbpSdKltuhIx
KcDttG2sd2ul0NjTECkfFKDNa1Nv4H4pyg1zqNefCLDliSndLluKHY0FepIP
vwcekRy+czWGCoIrVhwWwP1hqf4f8TJYF7qxXQV3YSEwUqqr18BAL428mMPH
MdY7/xHzGlBXvXgbls5H8fejTxQONVganFfQmHw4mN27l/ptDbwmXWOC6Hy4
xhzPMuPWICOexmr04YNyI4CT6VSLuPbdNIeVfAQHcmh3lLVQz3qxry2FB5HK
ralltxzq/8grs2Bz8dSD8TLNXY7VQ5lXZq9wMVf5wNzLVw5aUcbG7iQunM/v
Cm44JceghBNZEcWFxMRprva6HJHtaRdufsPFva8srflj8g+98/dT1nMh4/xF
z8ysQ2xQ9fv48CrIw2+uOTpVj+XIkPPK/gq8+XiPQcWPj6DRvHmrzKccGgvl
hmvsHiNQ4TpnTt4BZfm4yK+yCRR14+EFtTI0pexoVmxuQRRx/89Q/1Ksz5hc
+HWmFcF29opaUQkm5weUXdvaYRbW3WJMK8btierH+ukdGB5b1/WDXhH0rcrI
kZFOrPsyvUS9thCsMGHoLdunuHSIp70gv4m5veUjpxO7UaCd1PO6MR/E9nqB
eV0PUOM7yFqdh4HK+tQ2m2dwcymy/Dk8F+/CO/Pt4/9Esouho8doNrbs01kK
re6DCbMxdHNWFtyLbU7xLJSwNC+z93LLRKxV0IahYwMI7fGnRKz7GQ5TR/S6
vQcx3tGed9n4OkwM/tKtXxxEeraqIVXzJ2jV5FdtvDGEhxW7NVMtMhCxo7p3
hacKR018Gpyo6Sg/GHLrwZwKF416qQfyWXgzaWn4PHsYPeWvmhhrUyH0c9fM
/GoEuy8UnkXONSR6MAsFz0fw1uK2m5/rVdj0H+opYY6CRjbaF+hcwRfOKZmr
tz/HpSdyXpiCiWPrWhbUO56jwzuq88zvKXjzOE31b8YLNHSmt/NZl5CrFUj4
2o7hJT1ILGUnw0QpLNaoH8P01Ri/mFIGtBMY/rvOjmM8zOGQVJgEtV8Dq1TG
EzCs0o+l/DcRUXlVacbyCbQm9OcfM7uI+1uu6hqdmURAXtt+KfMCjA5FOSTr
T8HZeua6l9159G1t7Tgnm4KJzPfwu+pz4BbAdiRwGvS9nGfaCXGgVVGMrJam
YdJykZniH4skZhGj77cZ5PMmbAc3xqBizCpf34uE48z/Rn83j8bVm8zjyq9J
3NdvzbI0jsb3vtN2lVQSn3qd/+baqmislcm43gEkwjSxIlwrGv9hf6dghZCo
9pU77HxF4DTll5crz5HYHv25o04zgQ0pph46HBIPv9P67MxlAks7L6zqvkNi
5oFHzHsGgd7p4XZOOYmhOMHDtAQCGQF3aQd4JPpcX0byCALLm33pTBmJwAH2
Bu0TBPra2AWaHSQoTjal/SAguTx/oqOLxHK6oWeCC4FMlyD7kh4SNpLpWStn
Ap6ljgJXJYl/yk/6hTgSkMb90cgYJ1HHXv5sfi2B7K2fs6lTJOqvGbwq+IjA
WdUNfxuShEj3Lc/dlMAnXj8M1M5+8EUcpNzQI6Cl3nk7Y55E/8TWRXcdAoNC
l/DjiyTyN6kezGoQkIWXOG17TyLP2jaleImOnPV6b5aXSeSO8Q5SF+n4G88s
BqQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
HKjYRfwPVGUPBA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
R854IVFecGphgYuNns4bMOWF/wEN84fu
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Alpha]\"", TraditionalForm], 
       FormBox["\"J\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[FontSize -> 16], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, {0., 0.09722213967556517}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{Automatic, Automatic}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(+\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(-\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(J\\), \\(net\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 16], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6991272227008495`*^9, 3.699127229269236*^9}, 
   3.699128142374013*^9, 3.699128224927142*^9, 3.699128336015328*^9, 
   3.6991283771958275`*^9, 3.699130341340497*^9, 3.699130477416369*^9, 
   3.699130752190864*^9, 3.6991309281193514`*^9, 3.6991327439890003`*^9, {
   3.6992686447041235`*^9, 3.699268697885638*^9}, {3.6992692049482574`*^9, 
   3.699269215328189*^9}, 3.6992695503088923`*^9, 3.699269620526784*^9, 
   3.6995377487276783`*^9, {3.699538048780377*^9, 3.699538093731327*^9}, 
   3.699538165610405*^9, 3.699538207936693*^9}]
}, Open  ]],

Cell["Plot total current for several geometries at fixed \[Lambda]", "Text",
 CellChangeTimes->{{3.699538862863946*^9, 3.6995388904241323`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pycolours", "=", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "Green", ",", "Red", ",", "Cyan", ",", "Purple"}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699539647552724*^9, 3.699539686536756*^9}, {
   3.699539728288863*^9, 3.699539746784789*^9}, {3.699539797929229*^9, 
   3.699539799048854*^9}, {3.69953985174535*^9, 3.699539909465046*^9}, 
   3.699539961937882*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lam", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"llist", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"l", ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", 
        RowBox[{"0.1", "*", "lam"}], ",", 
        RowBox[{"0.5", "*", "lam"}], ",", 
        RowBox[{"0.1", "*", "lam"}]}], "}"}]}], "]"}], "//", "Reverse"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"J\[Alpha]plot", "=", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Jp", "-", "Jm"}], "}"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"L", "\[Rule]", 
           RowBox[{"lam", "-", 
            RowBox[{"llist", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
          RowBox[{"l", "\[Rule]", 
           RowBox[{"llist", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "llist", "]"}]}], "}"}]}], "]"}], "//", 
     "Evaluate"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "All"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\"\<\[ScriptL]/\[Lambda]=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"llist", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/", "lam"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "llist", "]"}]}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"\"\<\[Lambda]=\>\"", "<>", 
      RowBox[{"ToString", "[", "lam", "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Alpha]\>\"", ",", "\"\<J\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "14"}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", "pycolours"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\</Pressure/RECT/Theory/Ja_lam\>\"", "<>", 
       RowBox[{"ToString", "[", "lam", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
      "%", ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"400", ",", "400"}], "}"}]}]}], "]"}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.699268731055789*^9, 3.69926901994271*^9}, 
   3.699269141360795*^9, {3.6992692651004276`*^9, 3.699269276674156*^9}, {
   3.6992700907020907`*^9, 3.699270128108071*^9}, {3.699270173515395*^9, 
   3.699270265301691*^9}, {3.6992702982637033`*^9, 3.699270310516885*^9}, {
   3.6992704138749075`*^9, 3.699270523338008*^9}, {3.6992706090692596`*^9, 
   3.699270781952714*^9}, {3.699271848294685*^9, 3.6992718510325136`*^9}, {
   3.69927418943011*^9, 3.699274204127925*^9}, {3.699274235924159*^9, 
   3.6992742486846814`*^9}, 3.699274313343861*^9, {3.699277571660849*^9, 
   3.6992776892673883`*^9}, {3.699277733414871*^9, 3.6992777754949713`*^9}, {
   3.699277812378602*^9, 3.699277969280384*^9}, {3.699278007877158*^9, 
   3.6992780096493425`*^9}, {3.699538899940415*^9, 3.699538927364538*^9}, {
   3.699539752484458*^9, 3.699539817147443*^9}, 3.699539920197217*^9, {
   3.699539953761203*^9, 3.699539992332533*^9}, {3.6995404997884197`*^9, 
   3.699540575122159*^9}, {3.699540657404948*^9, 3.699540723316958*^9}, 
   3.69955190497614*^9, {3.699734535442288*^9, 3.69973454010338*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[{{2.040816326530612*^-8, 0.}, {0.00030671792055962676`, 
         1.6653345369377348`*^-16}, {0.0005367410548568979, 0.}}], 
        LineBox[{{0.06077788357015209, 0.}, {0.08025764881887605, 0.}, {
         0.10138846915816112`, 3.469446951953614*^-18}, {0.12110912009821138`,
          0.}, {0.1424808261288228, 0.}, {0.16346277092346467`, 
         1.734723475976807*^-18}, {0.18303454631887175`, 0.}, {
         0.20425737680483996`, 0.}}], 
        LineBox[{{0.305545518858404, 0.}, {0.32647059825508584`, 0.}}], 
        LineBox[{{0.4188226645803315, 0.}, {0.429331209352014, 
         4.336808689942018*^-19}, {0.43586684940005743`, 0.}}], 
        LineBox[{{0.5200565050108032, 0.}, {0.5306110548558273, 
         4.336808689942018*^-19}, {0.540460520001234, 0.}}], 
        LineBox[{{0.5821400826007176, 0.}, {0.5926201946734201, 
         2.168404344971009*^-19}, {0.6023952220465052, 0.}}], 
        LineBox[{{0.6333713592563216, 0.}, {0.6531622996938181, 0.}, {
         0.6725634788953451, 0.}, {0.6936157131874332, 
         1.0842021724855044`*^-19}, {0.7001630681517176, 0.}}], 
        LineBox[{{0.7274531914025627, 0.}, {0.7345508980637009, 
         1.0842021724855044`*^-19}, {0.7544338486478805, 
         1.0842021724855044`*^-19}, {0.7739270379960906, 0.}, {
         0.7950712824348619, 2.168404344971009*^-19}, {0.8148053574743983, 
         0.}}], 
        LineBox[{{0.8980073105789717, 0.}, {0.9178333957651912, 
         5.421010862427522*^-20}, {0.9372697197154413, 0.}, {
         0.9583570987562524, 0.}, {0.9780343083978288, 
         1.0842021724855044`*^-19}, {0.9783775220102351, 
         5.421010862427522*^-20}, {0.9787207356226415, 0.}, {
         0.9794071628474543, 0.}, {0.9807800172970798, 0.}}], 
        LineBox[{{0.008178620738732906, 0.}, {0.009814340804846833, 
         1.3877787807814457`*^-17}, {0.016357221069302545`, 0.}}], 
        LineBox[{{0.9947373708682723, 0.}, {0.9948517754057411, 
         5.421010862427522*^-20}, {0.9951949890181475, 0.}, {
         0.9958814162429602, 0.}, {0.9972542706925858, 0.}, {
         0.9975974843049922, 0.}}], 
        LineBox[{{0.9903899984444582, 0.}, {0.9917628528940837, 0.}}], 
        LineBox[{{0.9982839115298048, 0.}, {0.9986271251422112, 
         5.421010862427522*^-20}, {0.9989703387546176, 0.}, {
         0.999313552367024, 5.421010862427522*^-20}, {0.9996567659794304, 
         5.421010862427522*^-20}, {0.9997711705168992, 0.}}]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
3OZaSiWRKMy6vLlJxd/f+9rmoiqJ/wEQjI8Y
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        LineBox[CompressedData["
1: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
H5ye4qDwvspOaIkJ+h/WTgxr
         "]]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5]], 
        LineBox[CompressedData["
1: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
h9o7IUiSXdK8pR3z6Kb/HF3tAM7n3g9KzTuw1v3KE3NoB7GbXPITTzowQqno
XxRfO6jxFQmSvuxAsQr6zGXadnDtnF1XCunAmLOnxvtG2mCOU8ppqqIDezau
KC/ZtUFG1bY/5f5OvFgy0LqT3Qri/+6VaOZ04uftv/fGxVtARbXWQ66sE71m
ZUrTuVvgwYdjNyTqO3E2vyvBn7YFgiWmljmGOzHlh2nP+6lmWLHRY5/704mE
Sx+GynyaIXrm1nNb1S7c9heQZJxqAtJ6JemAtS68Wvh10iaqEdgYM+ldd7vQ
952qyax3I4gY7Bu3JelGrvCn7x8+aQTdXy1PtFi7MUFeLzVLpRGKzsmlHLnS
jUxuMkeOkjTCwySkyfTrxjTiW84Qiwbo9LzQ3XyyB+mYFayFVOtBkqGD7K1Y
D557mbPxWLIe0iONJPSu9mBX8mBS94l6eJUTGE+81YPp5hJqjWT/4UcJdmzu
PXh149uh2PI6SD8Vc9hipAdzqmQdv5+sA+kVjzwq6V6cfvNbI+1ILTiLdLdb
KvTiieDqX0p0tZD3hH2xV6UXj4eekSTZrYGjf3PZP9zuxXz6fjKp4hr4yTzp
IWrViz+MWy9pitVA3hWJW3cietGebflE7+VqOBb85WfGRi9ahnAJURpVQrWR
a0bBdi+GDPLXKMlXgsF5Fp1PP3qx+vNKeeapSogelizrJOtD/qzr1uW7n4CN
y/cp8VAf/j1P7KIP/ATMmYLbF7APA+caP7rXVQBlo8laTVAf3g5Iu9krWQ7J
735+aA3rQ+MxrzGR4+Ugaxqg3BfZh42ajd7JdOXgQVucOZfUhyueX9cHJ8rg
700Kc8qyPqwSJNdQcCuDH5OJi0ozfUh/o2DmbkcpfPk+PTV0ph9FWkuJBY9L
oMQ0qF5JvB+POnll0eiVgNsIpNZc7se33zTkn8qWwKHSGKsM+X60ibmbE3G4
5L/7r/f7uX4/vrmqavK9uhiidobZ+V73Y8yFazWUzMWguNWlZTfdj1ssNZsl
rYXAYvTi4vJCP547WyQ5UlQIU73CnPqr/XiyI+36/oRCsM/zm5f71o/WZnO6
Rc6FEGdz3Y6dbgBn/pH0/DxVCLvrjUG14gPoQBLpJB9WAMmrn9rpAwdQyNPt
x40n+WD9/sZxi9ABrG0aXxO9nw8SsvMuTREDKHOBqMGjng/tMbSnnycNYLrb
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
6L79+0dEFGvkUvMghf8BhwYnJw==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Alpha]\"", TraditionalForm], 
       FormBox["\"J\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[FontSize -> 16], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Lambda]=5\"", TraditionalForm], 
     PlotRange -> {{0, 0.5}, {0, All}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[FontSize -> 14]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[ScriptL]/\[Lambda]=0.5\"", "\"\[ScriptL]/\[Lambda]=0.4\"", 
       "\"\[ScriptL]/\[Lambda]=0.3\"", "\"\[ScriptL]/\[Lambda]=0.2\"", 
       "\"\[ScriptL]/\[Lambda]=0.1\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 16], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6992688366433024`*^9, 3.699268853868805*^9}, 
   3.699268899065988*^9, 3.6992689326824374`*^9, {3.699269137379135*^9, 
   3.699269142958861*^9}, {3.699269271142463*^9, 3.699269279006714*^9}, {
   3.6992701024919653`*^9, 3.699270130330555*^9}, 3.699270175490713*^9, {
   3.6992702247145863`*^9, 3.6992702684968243`*^9}, {3.699270303539226*^9, 
   3.699270312393139*^9}, 3.6992704159933248`*^9, {3.6992704917138896`*^9, 
   3.6992705253823743`*^9}, {3.699270721520356*^9, 3.6992707501624837`*^9}, 
   3.6992707843883395`*^9, 3.699271854556868*^9, 3.699274206684633*^9, 
   3.699274315256137*^9, 3.69927763395345*^9, {3.699277666037876*^9, 
   3.6992776911376376`*^9}, 3.699277735415207*^9, {3.699277880174879*^9, 
   3.699277909252296*^9}, {3.6992779510542107`*^9, 3.699277970721346*^9}, 
   3.6995377491653137`*^9, {3.699538895327693*^9, 3.699538927911831*^9}, {
   3.699539757208067*^9, 3.6995398176120577`*^9}, 3.699539869291628*^9, {
   3.699539912154729*^9, 3.699539920867424*^9}, {3.6995399666258497`*^9, 
   3.6995399929187098`*^9}, {3.69954053694223*^9, 3.699540576361703*^9}, {
   3.69954066450312*^9, 3.6995407237595253`*^9}, {3.699734520114613*^9, 
   3.699734542060965*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"llist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "\[Lambda]list", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alist", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"Length", "[", "\[Lambda]list", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"j", "=", "1"}], ",", 
   RowBox[{"j", "\[LessEqual]", 
    RowBox[{"Length", "[", "\[Lambda]list", "]"}]}], ",", 
   RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]", "=", 
     RowBox[{"\[Lambda]list", "[", 
      RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"llist", "[", 
      RowBox[{"[", "j", "]"}], "]"}], "=", 
     RowBox[{"Table", "[", 
      RowBox[{"l", ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "0.1", ",", 
         RowBox[{
          RowBox[{"0.5", "*", "\[Lambda]"}], "-", "0.1"}], ",", 
         RowBox[{"0.01", "*", "\[Lambda]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"alist", "[", 
      RowBox[{"[", "j", "]"}], "]"}], "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"Jp", "-", "Jm"}], ",", "a"}], "]"}], "\[Equal]", "0"}],
            "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"L", "\[Rule]", 
              RowBox[{"\[Lambda]", "-", 
               RowBox[{"llist", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i"}], "]"}], "]"}]}]}], ",", 
             RowBox[{"l", "\[Rule]", 
              RowBox[{"llist", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "i"}], "]"}], "]"}]}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "0.001"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MaxIterations", "\[Rule]", "1000"}], ",", 
          RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}], ",", 
          RowBox[{"PrecisionGoal", "\[Rule]", "8"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"llist", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"llist", "[", 
      RowBox[{"[", "j", "]"}], "]"}], "/=", "\[Lambda]"}], ";"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"alplot", "=", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"llist", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"alist", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Lambda]list", "]"}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[ScriptL]/\[Lambda]\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Alpha]\), \(*\)]\)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\"\<\[Lambda]=\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"\[Lambda]list", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Lambda]list", "]"}]}], "}"}]}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\</Pressure/RECT/Theory/allam.pdf\>\""}], ",", "alplot"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.6992724694995303`*^9, {3.699272527738423*^9, 3.6992725951764584`*^9}, {
   3.6992728425256395`*^9, 3.699272986437743*^9}, {3.6992730504464903`*^9, 
   3.6992731613585567`*^9}, {3.699273211256879*^9, 3.69927325812718*^9}, 
   3.699273322536192*^9, {3.699273431060665*^9, 3.6992734332131042`*^9}, {
   3.699273509581103*^9, 3.699273512649152*^9}, {3.6992739507407107`*^9, 
   3.699273962271411*^9}, {3.699274119384333*^9, 3.6992741204580493`*^9}, {
   3.699538987984209*^9, 3.699539022777363*^9}, {3.699539072076851*^9, 
   3.699539079675268*^9}, 3.6995391119168673`*^9, {3.699539153141614*^9, 
   3.6995391815018177`*^9}, {3.699544499619801*^9, 3.699544515709197*^9}, 
   3.6995518915548477`*^9}],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,336,37,29594764226397259462,"CN"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.699544517855598*^9, 3.699551911564127*^9}],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,336,38,29594764226397259462,"CN"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.699544517855598*^9, 3.699551911681731*^9}],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,336,39,29594764226397259462,"CN"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.699544517855598*^9, 3.699551911697891*^9}],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"lstol\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,336,40,29594764226397259462,"CN"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.699544517855598*^9, 3.69955191172086*^9}],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","frmp",
   "\"Machine precision is insufficient to achieve the accuracy \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.0000000000000005`*^-8\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\).\"",2,336,41,29594764226397259462,
   "CN"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.699544517855598*^9, 3.699551913517778*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQPWsmCOy07/HYcGDDjjZ7zZj+Q1819tgH1DzV2R3R
Y79TrvV14I599ox/Tvx4kTjRfkmBLdf1xQfsN7MLlDMyT7V/E7gDqOKg/Yz5
nkxTRWfamxiDwGH7UxcC5TPnz7WvFlnn/rDqiP0cjszVrMEL7Q9/1QDacNS+
cV3xpwTxJfZAw4AmHrfP9RdqsZNfbh8EMi7whP2N7IrFT3JW2UPcd9J+pbFW
VSLTOvtHVSADT9lnTbl36tCHDVD3nrHvvxc48z3rZvtCkPMKztq/2HNbN9px
K9T95+yfP+1717J4uz0DGFywD+W703BMZxfUPxfsy9Z1sgXf3WPv8RBkwUV7
ZrPKDWZb90P9d9Her9jBXzvqoP2EQyAPXLJfrqzVZPH2ENS/l+3DZuQd65t8
xB7sneuX7Vn1Zv1+5nMM6v8r9pzPlUufS5ywlwc5R+6qfT7npzqV7yftwcYd
umrvd7Hpj8Lz0/ZpYHDNnj3hs5L/i7PQ8LluvymPy0/w13l7kGki64B827/l
d3kvQsPrhv0ej5SzHmqX7L+BjPt6w/6J+FyB566XoeF3055l/q+nfjlX7AFj
M/IQ
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwtkm1IU1EAhldBiAkRrSJ/mJbgtnIQWw1/2Ev0ZVbGhvkjdcLK0FJSKkMn
iTR1pLWmSZipsC0lmUNTbNNaNjeXuuXHPjU1thCHMwvKmBHW7u28cDlw4D7v
BydOclOUu5nBYLDDH3U+a6L0EnkV0kaDNh2GmKqgUK+D6sV2l/6HGCtCffim
B/Olql0zi7mQMnVnfGV96InfQMdAISI96qLkyNe40Z6enfLwFv7zDNjL7GQH
mKVgZylMa6w3OHj2wN8TNRWEbwRP0Jp2qPw+NOG/PeohpF5/+7nSWEP83qNQ
9oUlbawDn0dpGJaTmUHWViXxN+P54d575/Y8QRgedrCgt6shtFP2lOSxwrGR
//2xqBkiCif8gLal+YRleRvJNwr38oBKu1sFfxkFHEPdI1nUDrUGHDqvDVdr
WUmWgg7Q8Yrs6OdmjQRKOkHj9B9xKltT3WDuAoPWJDgBviRP2036TOJoZXHs
heZXSPFRBlMoeGcrzu/uI/2mwOHXVsd+7YeCLjCNRHcEzCID6Lo8B0SDF/1K
/yDoOh4HFo4cV+pajKS/E1uaxvRK0xD2UXFiXNDdPm1dOW8ie7gQvUmsT10d
xjVabnhHMpPW2y1kHw/iQ3Or3LtWUDSmzoNyQ8u3iJxRspcXdkmJQC4exy8K
t+bFPFcZp7hjJ/vNoD4U/WdBPQF6nuRZTLDTFh/8nARd1zeLJeexhIz906Dj
VX3CuCdD8Puyg7yHOVzJcW6LanXCbqM0h3r5+qWooAv/AA4bSI0=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwtkWtIk2EcxWd5KWRskrpwmqRphZeivGXm2aAPlZXmyjQidSBhmJp4gVBx
UeSSbjM1tZVGLWXMnK60bK2lm0szp1PXu+UHMVEiKBUlxaT3fdqBh+fbj//5
ne3ivOSsDSwWK5R+zO/lkqR9GqpAjDVm3+yUDXtr18Sf9ihQz98imG4XIJE/
p5GcVKJsrZi6KzqGaHP2RnlUO5bcjs93iUQwytJDVwwdCPwzqkpbPYczJK/A
jUkZCAwQY4aXUK7+3gUOVVF+VnURhTbBC3bhW/DWKb+XEbmgYTRRCw+D3Vsz
W4BqBifTISyipYmdUAIPEj20m34MpJ8qRepCVZAu9SOCpfacEGcJmiyusZeb
euHV2XxiF66DuZY/1wdv54NXw6duOvoYkRb3xtN/oQolJP3gGVbifA7dg44A
TShfdvdz0svgRtMsrgO4M6+riJXWOPoPQu5FRWc3PEQNg6v9jM6/kZfOrzRi
kmQISb7GTI7yCYIIcBiHfYUNp23NiCK+zDiymu//nv0MpL7NjNI2qepagQK0
HNrQCCoXJReK3FsRQDIKlx11IWV2pcPvKIYGfcaqZ9pAaNkW2Mty9ou91WAT
oWO4v5is8rR1gODUY3DKf8Qt0mkce4zDWhnO8TW9Bi2XBo5juDWj+PlSN4h+
+QTUQ5qfqqM9EDLnCayIn74Fs0Hr2M8KTQKLPxL5AdJKJl8xk1ibl/pYjzAC
pFDP6d4d79eL/3UpUMtZVw509jn2tqHoxu2JpQwjtjI4nh3BvNxk7k4T3vUw
saNk82+WJ+09g5k//RsKFJl1xeuDcCYHTqL9l7D5AfcLWkjhScj1Lf0p28z4
BwQNT1A=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwtkmtIU2EcxjfJslmgbos2YqJC5G2EJchqe4zyhmG4wD6khjNvH0oXKjjb
SHIqGGrZRookU1OJtbLMu+Yca2LlLXNztmJ9sIszQVKERnXO23ng8H45/+d5
3v/vDVEUy/N8WCxWFPXR51p+301VmBFx9riYr24nwjMbp7aPGbHoz87rSjiD
rhIpx975DH9HYnS9ohScPEHrBRRsYdqhonRQP1MTLxFk323zSb4E+ZBIu54+
BLYzJ7UlIRtfVDxTknsE0bG6SbUsF8SuZByXBdb0St9CsIgmsSF12/bVXkOy
mx4w43z+RkPndyUa/wfAuCKu7VCXgRqmHCy4Z/HbVNdVIJhOE1nxQzO8+4Sr
QT7Ra3hn0w7r7leBCqcMbXBI3OLBomrs0G7b0wi54r93sqEWpI50BoKO0ALV
/noQO+0bnIu90e793IB3b4ngir94POPOXfCI4SzOpuo0Ia5mkHVlzmEsJ8z7
LU/P3H8eW+ren7kRLUzePAaLLnSrxG1obaG1gC0hn5dS3g4ZyV9EQbysL+C2
gdnXIiR8eXySshM1pM97eBT1iZF1jxg+S+BxirWymR6m3xKkZdFXQyWPoSQX
+gDZ70DTA6cRfNJ3Ga1+GQeqTU8xTPAsIyDawyvN7EMW6W+H/dbDgdI/z8Em
PBxIPL0jWJvoZ/g7EH49YrSifYDhswJF91rWpmEIHrre+gp+RckN3OkRNBFe
TvjuMQVPcMeZ97IKxXANZ67mFRyE3yoOlh8V6gPNqCQL/Qh94amx7LIphqcL
TalHJP2bFlgIfheag2xmbZUVBYTvJyxEKb2jkTb8Aze/SvU=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwtkntIU1EAxmdSf6wHglbLQpMsm5aUSzMqP1BTMxZNSYitx0QLi1BmRlmz
onwQ2pTKfNBMZyGrZluyrbnGzHyli6213fnYYIlYTLKXlUHZzuV+cDh/ne/x
uzcitzArfxGLxYrxH3KnxXbGC6fVSKQS46a9Y/AJ9GHlPjWOD3Yf3mpLwaUQ
Vbq3tAs1jYFB+79mYimlKNrL1kF0/86vZpMATY1EL6As5mU7hnMQLZK9mtts
BH/xibPdGhGIm0BvQoezsr+gV4x2/2tKYUadVvMvV5WPGTqvB6LheDNv42nw
aPUiPT/mr5hXyOS/xo825eObEgn85v6EPiyv4IfKFCVg030GcEgp+1PGu4gs
OnAQmRz3rgtcKdNvCManwpfS/qv4UEoM34C7aoA7H3ed6TuCuxmt24SeckhI
vSIL2AWpzcssVTDQ/d8icsWXem1gNQJYRFb4fkfWplfK8JDeY8V8shOXVXXI
8JIAG7oNedncvtvMPhtmGtaMN7HrUUsPeIek8J4ts9casIPea8e39Smy87HN
cJE5lB0zC2anNljO7H8PeQmnTtf0AOGkTpgD4huTLsuBNvTSPBwY0mun9oS3
49RJIic2TbKt+1Y/Yr4XBVONN+hgQgeIW4iKgkNxVOgtUzK8XJBORh15/v0J
fhK7ORfcOdW7W+91MvxGEZSaXTWaoEYSDXwMs8FVebeMGobnGPqTnp1pOdaF
CvoHGsdajS7KHqZl+E6A4/7IW7Kgg2WEaAKfppLl0QEGhrcbLdt3UmlRRqyk
C3oQHRqx7lyxieHvwRW+dcPnYjP+AxrOTvg=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5}, {0., 0.42003803162093645`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[ScriptL]/\[Lambda]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Alpha]\\), \\(*\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[FontSize -> 16], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.5}, {0., 0.42003803162093645`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Lambda]=1\"", "\"\[Lambda]=2\"", "\"\[Lambda]=3\"", 
       "\"\[Lambda]=4\"", "\"\[Lambda]=5\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 16], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.699273983218401*^9, 3.699537753696424*^9, 3.699538947292881*^9, 
   3.699539028972183*^9, 3.699539082802473*^9, 3.699539114907176*^9, {
   3.6995391564243383`*^9, 3.699539183603739*^9}, 3.6995445195718937`*^9, 
   3.699551913923604*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Data", ".", " ", "\[Lambda]"}], "=", "1"}], ",", "2", ",", "3", 
    ",", "4", ",", 
    RowBox[{
     RowBox[{"5.", " ", 
      RowBox[{"l", "/", "\[Lambda]"}]}], "=", "0.1"}], ",", "0.2", ",", "0.3",
     ",", "0.4"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]list", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"llist", "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.2", ",", "0.3", ",", "0.4"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"alist", "=", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.15", ",", "0.5", ",", "1.2", ",", "2.0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.15", ",", "0.3", ",", "0.8"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1", ",", "0.15", ",", "0.3"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.1", ",", "0.1", ",", "0.15"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.05", ",", "0.1", ",", "0.1"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allamData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"llist", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"alist", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Lambda]list", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", 
         RowBox[{"Length", "[", "llist", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"alSimPlot", "=", 
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{"allamData", ",", "\[IndentingNewLine]", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotMarkers", "\[Rule]", 
       RowBox[{"{", "Automatic", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0.5"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[ScriptL]/\[Lambda]\>\"", ",", 
         "\"\<\!\(\*SuperscriptBox[\(\[Alpha]\), \(*\)]\)\>\""}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Lambda]=1\>\"", ",", "\"\<\[Lambda]=2\>\"", ",", 
         "\"\<\[Lambda]=3\>\"", ",", "\"\<\[Lambda]=4\>\"", ",", 
         "\"\<\[Lambda]=5\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", "\[IndentingNewLine]", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
       "\"\</Pressure/RECT/Theory/allamSim.pdf\>\""}], ",", "alSimPlot"}], 
     "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.699135358846218*^9, 3.699135471203251*^9}, {
  3.6991355454648433`*^9, 3.6991356652328253`*^9}, {3.699550023638364*^9, 
  3.699550070062417*^9}, {3.699550104174341*^9, 3.6995501118462553`*^9}, {
  3.699550145790278*^9, 3.699550175806291*^9}, {3.69955022183858*^9, 
  3.6995502515744543`*^9}, {3.6995503136376677`*^9, 3.6995503394937153`*^9}, {
  3.699550402253707*^9, 3.6995504094783*^9}, {3.69955044140569*^9, 
  3.699550482345475*^9}, {3.699550535117968*^9, 3.69955057356164*^9}, {
  3.69955060619014*^9, 3.6995506066378193`*^9}, {3.699550684765897*^9, 
  3.6995510350469933`*^9}, {3.6995510831431828`*^9, 3.699551125023055*^9}, {
  3.699551293698799*^9, 3.699551318069715*^9}, {3.699551700591872*^9, 
  3.69955173321488*^9}, {3.699551812047904*^9, 3.6995518779912577`*^9}, {
  3.6996241742133703`*^9, 3.699624190196727*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[{{0.1, 0.15}, {0.2, 0.5}, {0.2857142857142857, 1.1}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[{{0.1, 0.1}, {0.2, 0.15}, {0.3, 0.3}, {0.4, 0.8}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[{{0.1, 0.1}, {0.2, 0.1}, {0.3, 0.15}, {0.4, 0.3}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[{{0.1, 0.1}, {0.2, 0.1}, {0.3, 0.1}, {0.4, 0.15}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[{{0.1, 0.05}, {0.2, 0.05}, {0.3, 0.1}, {0.4, 0.1}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0.1, 0.15}}, {{0.2, 0.5}}, {{
         0.2857142857142857, 1.1}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], {{{0.1, 0.1}}, {{0.2, 0.15}}, {{0.3,
          0.3}}, {{0.4, 0.8}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], {{{0.1, 0.1}}, {{0.2, 0.1}}, {{0.3,
          0.15}}, {{0.4, 0.3}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledUpTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], {{{0.1, 0.1}}, {{0.2, 
         0.1}}, {{0.3, 0.1}}, {{0.4, 0.15}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDownTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], {{{0.1, 0.05}}, {{0.2, 
         0.05}}, {{0.3, 0.1}}, {{0.4, 0.1}}}]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5}, {0, 1.1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[ScriptL]/\[Lambda]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Alpha]\\), \\(*\\)]\\)\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[FontSize -> 16], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 0.5}, {0, 1.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Lambda]=1\"", "\"\[Lambda]=2\"", "\"\[Lambda]=3\"", 
       "\"\[Lambda]=4\"", "\"\[Lambda]=5\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 8.96}, {20, 8.96}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], FontSize -> 8.96, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.88}, {20, 10.88}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], FontSize -> 10.88, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], FontSize -> 10.24, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10.24}, {20, 10.24}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], FontSize -> 10.24, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[FontSize -> 16], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDownTriangle]\"", ",", "10.24`"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.699550806385584*^9, {3.699550869138461*^9, 3.699550906153812*^9}, 
   3.699550939355884*^9, {3.699550993318246*^9, 3.6995510413937273`*^9}, 
   3.6995510837745237`*^9, {3.699551116872528*^9, 3.699551125927307*^9}, 
   3.69955132108993*^9, 3.699551735061594*^9, {3.6995518135138206`*^9, 
   3.6995518390366993`*^9}, 3.699551916602426*^9, 3.699624252886908*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Text", "@", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Subscript", "[", 
          RowBox[{"\[ScriptL]", ",", "\"\<\>\""}], "]"}], ",", "30", ",", 
         "#"}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<TR\>\"", ",", "\"\<SR\>\"", ",", "\"\<MR\>\"", ",", "\"\<MB\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6995516055171127`*^9, 3.6995516055181637`*^9}, {
  3.699551651519209*^9, 3.699551688135445*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[InsetBox[
     StyleBox[
      SubscriptBox["\[ScriptL]", "\<\"\"\>"], "TR",
      StripOnInput->False,
      FontSize->30], {0, 0}],
    ImageSize->50], ",", 
   GraphicsBox[InsetBox[
     StyleBox[
      SubscriptBox["\[ScriptL]", "\<\"\"\>"], "SR",
      StripOnInput->False,
      FontSize->30], {0, 0}],
    ImageSize->50], ",", 
   GraphicsBox[InsetBox[
     StyleBox[
      SubscriptBox["\[ScriptL]", "\<\"\"\>"], "MR",
      StripOnInput->False,
      FontSize->30], {0, 0}],
    ImageSize->50], ",", 
   GraphicsBox[InsetBox[
     StyleBox[
      SubscriptBox["\[ScriptL]", "\<\"\"\>"], "MB",
      StripOnInput->False,
      FontSize->30], {0, 0}],
    ImageSize->50]}], "}"}]], "Output",
 CellChangeTimes->{{3.699551647494138*^9, 3.699551689873592*^9}, 
   3.6995517680832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ell", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Text", "@", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Subscript", "[", 
             RowBox[{"\[ScriptL]", ",", "\"\<\>\""}], "]"}], ",", "30", ",", 
            "#"}], "]"}]}], "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", "\"\<MR\>\"", "}"}]}], ")"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ToString", "[", "ell", "]"}]}], "Input",
 CellChangeTimes->{{3.699551778527882*^9, 3.699551805341778*^9}, {
  3.699551846806377*^9, 3.699551854565756*^9}}],

Cell[BoxData[
 GraphicsBox[InsetBox[
   StyleBox[
    SubscriptBox["\[ScriptL]", "\<\"\"\>"], "MR",
    StripOnInput->False,
    FontSize->30], {0, 0}],
  ImageSize->50]], "Output",
 CellChangeTimes->{{3.699551790222237*^9, 3.699551806114436*^9}, 
   3.6995518550351*^9}],

Cell[BoxData["\<\"-Graphics-\"\>"], "Output",
 CellChangeTimes->{{3.699551790222237*^9, 3.699551806114436*^9}, 
   3.69955185503726*^9}]
}, Open  ]]
},
WindowSize->{1276, 944},
WindowMargins->{{2, Automatic}, {4, 26}},
CellContext->Notebook,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 199, 2, 47, "Text"],
Cell[760, 24, 112, 1, 40, "Text"],
Cell[875, 27, 1999, 63, 104, "Input"],
Cell[2877, 92, 1802, 52, 180, "Input"],
Cell[4682, 146, 113, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[4820, 151, 1767, 44, 175, "Input"],
Cell[6590, 197, 19027, 326, 331, "Output"]
}, Open  ]],
Cell[25632, 526, 136, 1, 40, "Text"],
Cell[CellGroupData[{
Cell[25793, 531, 2220, 60, 211, "Input"],
Cell[28016, 593, 639, 16, 88, "Output"],
Cell[28658, 611, 892, 25, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29587, 641, 96, 1, 38, "Input"],
Cell[29686, 644, 944, 33, 211, "Output"]
}, Open  ]],
Cell[30645, 680, 200, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[30870, 688, 1769, 41, 202, "Input"],
Cell[32642, 731, 31311, 579, 312, "Output"]
}, Open  ]],
Cell[63968, 1313, 144, 1, 40, "Text"],
Cell[64115, 1316, 413, 9, 40, "Input"],
Cell[CellGroupData[{
Cell[64553, 1329, 4354, 104, 430, "Input"],
Cell[68910, 1435, 54087, 977, 339, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123034, 2417, 5572, 144, 606, "Input"],
Cell[128609, 2563, 505, 9, 65, "Message"],
Cell[129117, 2574, 505, 9, 65, "Message"],
Cell[129625, 2585, 505, 9, 65, "Message"],
Cell[130133, 2596, 361, 7, 36, "Message"],
Cell[130497, 2605, 377, 8, 51, "Message"],
Cell[130877, 2615, 28204, 561, 400, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159118, 3181, 4479, 108, 688, "Input"],
Cell[163600, 3291, 30913, 658, 393, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194550, 3954, 633, 18, 50, "Input"],
Cell[195186, 3974, 843, 28, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196066, 4007, 755, 20, 83, "Input"],
Cell[196824, 4029, 271, 8, 101, "Output"],
Cell[197098, 4039, 136, 2, 50, "Output"]
}, Open  ]]
}
]
*)

